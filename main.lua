--// Doge's Menu local Players = game:GetService("Players") local RunService = game:GetService("RunService") local UserInputService = game:GetService("UserInputService") local StarterGui = game:GetService("StarterGui") local LocalPlayer = Players.LocalPlayer -- UI Library local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))() local Window = Library.CreateLib("Doge's Menu", "DarkTheme") -- Vars local wsLoop local currentWS = 16 local uiVisible = true -- ESP state local espObjects = {names = {}, chams = {}} local chamOpacity = 0.5 local chamColor = nil local nameColor = nil -- Notify helper local function notify(text) pcall(function() StarterGui:SetCore("SendNotification", { Title = "Doge's Menu", Text = text, Duration = 3 }) end) end notify("Doge's Menu Loaded - Press F6 to toggle") -- === Find the Kavo ScreenGui reliably === local function findMenuGui() local sg = game.CoreGui:FindFirstChild("Doge's Menu") if sg and sg:IsA("ScreenGui") then return sg end for _, inst in ipairs(game.CoreGui:GetChildren()) do if inst:IsA("ScreenGui") then local n = inst.Name:lower() if n:find("kavo") or n:find("doge") then return inst end end end for _, d in ipairs(game.CoreGui:GetDescendants()) do if d:IsA("TextLabel") and d.Text == "Doge's Menu" then local sg2 = d:FindFirstAncestorOfClass("ScreenGui") if sg2 then return sg2 end end end return nil end -- Wait briefly for library to mount GUI local MenuGui do for _ = 1, 100 do MenuGui = findMenuGui() if MenuGui then break end task.wait(0.03) end end -- F6 toggle (toggling the ScreenGui.Enabled) UserInputService.InputBegan:Connect(function(input, gp) if gp then return end if input.KeyCode == Enum.KeyCode.F6 then uiVisible = not uiVisible MenuGui = MenuGui or findMenuGui() if MenuGui then if MenuGui:IsA("ScreenGui") then MenuGui.Enabled = uiVisible else local rootFrame = MenuGui:FindFirstChildOfClass("Frame") if rootFrame then rootFrame.Visible = uiVisible end end end notify(uiVisible and "Menu Opened (F6)" or "Menu Closed (F6)") end end) -- // MAIN TAB local MainTab = Window:NewTab("Main") local MainSection = MainTab:NewSection("Player Controls") -- Toggle WalkSpeed MainSection:NewToggle("Toggle WalkSpeed", "Enable/Disable custom WalkSpeed", function(toggled) if toggled then wsLoop = RunService.Heartbeat:Connect(function() if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = currentWS end end) else if wsLoop then wsLoop:Disconnect() wsLoop = nil end if LocalPlayer.Character and LocalPlayer.Character:FindFirstChildOfClass("Humanoid") then LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = 16 end end end) -- WalkSpeed Slider MainSection:NewSlider("WalkSpeed", "Change WalkSpeed", 200, 20, function(s) currentWS = s if wsLoop then LocalPlayer.Character:FindFirstChildOfClass("Humanoid").WalkSpeed = currentWS end end) -- Go Up MainSection:NewButton("Go Up", "Teleport 100 studs up", function() if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then LocalPlayer.Character.HumanoidRootPart.CFrame *= CFrame.new(0,100,0) end end) -- Go Down MainSection:NewButton("Go Down", "Teleport 10 studs down", function() if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then LocalPlayer.Character.HumanoidRootPart.CFrame *= CFrame.new(0,-10,0) end end) -- // VISUAL TAB local VisualTab = Window:NewTab("Visual") local VisualSection = VisualTab:NewSection("ESP") -- Helper functions local function addNameESP(plr) if plr ~= LocalPlayer and plr.Character and plr.Character:FindFirstChild("Head") then if plr.Character.Head:FindFirstChild("NameESP") then return end local bb = Instance.new("BillboardGui", plr.Character.Head) bb.Name = "NameESP" bb.Size = UDim2.new(0,200,0,50) bb.Adornee = plr.Character.Head bb.AlwaysOnTop = true bb.StudsOffset = Vector3.new(0, 2, 0) local label = Instance.new("TextLabel", bb) label.Size = UDim2.new(1,0,1,0) label.BackgroundTransparency = 1 label.Text = plr.Name label.TextScaled = true label.Font = Enum.Font.SourceSansBold if nameColor then label.TextColor3 = nameColor elseif plr.Team and plr.Team.TeamColor then label.TextColor3 = plr.Team.TeamColor.Color else label.TextColor3 = Color3.new(1,1,1) end espObjects.names[plr] = bb end end local function removeNameESP(plr) if espObjects.names[plr] then espObjects.names[plr]:Destroy() espObjects.names[plr] = nil end end local function addChams(plr) if plr ~= LocalPlayer and plr.Character then if plr.Character:FindFirstChild("ChamsESP") then return end local h = Instance.new("Highlight", plr.Character) h.Name = "ChamsESP" if chamColor then h.FillColor = chamColor elseif plr.Team and plr.Team.TeamColor then h.FillColor = plr.Team.TeamColor.Color else h.FillColor = Color3.new(1,1,1) end h.FillTransparency = 1 - chamOpacity h.OutlineTransparency = 1 espObjects.chams[plr] = h end end local function removeChams(plr) if espObjects.chams[plr] then espObjects.chams[plr]:Destroy() espObjects.chams[plr] = nil end end -- Name ESP Toggle VisualSection:NewToggle("See Players Name", "Show usernames above heads", function(state) if state then for _,plr in pairs(Players:GetPlayers()) do addNameESP(plr) end Players.PlayerAdded:Connect(addNameESP) Players.PlayerRemoving:Connect(removeNameESP) else for _,obj in pairs(espObjects.names) do obj:Destroy() end espObjects.names = {} end end) -- Chams ESP Toggle VisualSection:NewToggle("Chams ESP", "Player highlights", function(state) if state then for _,plr in pairs(Players:GetPlayers()) do addChams(plr) end Players.PlayerAdded:Connect(addChams) Players.PlayerRemoving:Connect(removeChams) else for _,obj in pairs(espObjects.chams) do obj:Destroy() end espObjects.chams = {} end end) -- Chams Opacity VisualSection:NewSlider("Chams Opacity", "Set Chams transparency (1-100)", 100, 1, function(val) chamOpacity = val / 100 for _,h in pairs(espObjects.chams) do h.FillTransparency = 1 - chamOpacity end end) -- // SETTINGS TAB local SettingsTab = Window:NewTab("Settings") local SettingsSection = SettingsTab:NewSection("ESP Colors") -- Chams color picker SettingsSection:NewColorPicker("Chams Color", "Pick color for Chams", Color3.fromRGB(255,255,255), function(c) chamColor = c for _,h in pairs(espObjects.chams) do h.FillColor = chamColor end end) -- Reset Chams color SettingsSection:NewButton("Reset Chams Color", "Reset to team colors", function() chamColor = nil for _,plr in pairs(Players:GetPlayers()) do local h = plr.Character and plr.Character:FindFirstChild("ChamsESP") if h then if plr.Team and plr.Team.TeamColor then h.FillColor = plr.Team.TeamColor.Color else h.FillColor = Color3.new(1,1,1) end end end end) -- Name ESP color picker SettingsSection:NewColorPicker("Name ESP Color", "Pick color for names", Color3.fromRGB(255,255,255), function(c) nameColor = c for _,bb in pairs(espObjects.names) do local label = bb:FindFirstChildOfClass("TextLabel") if label then label.TextColor3 = nameColor end end end) -- Reset Name ESP color SettingsSection:NewButton("Reset Name ESP Color", "Reset to team colors", function() nameColor = nil for _,plr in pairs(Players:GetPlayers()) do local bb = espObjects.names[plr] if bb then local label = bb:FindFirstChildOfClass("TextLabel") if label then if plr.Team and plr.Team.TeamColor then label.TextColor3 = plr.Team.TeamColor.Color else label.TextColor3 = Color3.new(1,1,1) end end end end end)
